package com.gaoce.whatever.多线程;

import com.alibaba.fastjson.JSON;
import com.nis.shrio.da.domain.TimeProphet;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.Callable;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.Future;

public class testres implements Callable {
    private CountDownLatch countDownLatch;
    private List<Future> resultList;
    public testres( CountDownLatch countDownLatch,List<Future> resultList){
        this.countDownLatch = countDownLatch;
        this.resultList = resultList;
    }
    @Override
    public Object call() throws Exception {
        this.countDownLatch.await();
        List<TimeProphet> list = new ArrayList<>();
        try {
            for (int i = 0; i < resultList.size(); i++) {
                Future<TimeProphet> result = resultList.get(i);
                TimeProphet timeProphet =result.get();
                list.add(timeProphet);
            }
            System.out.println("所有线程结束");
            System.out.println(JSON.toJSONString(list.size()));
        } catch (InterruptedException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (ExecutionException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        return null;
    }
}
